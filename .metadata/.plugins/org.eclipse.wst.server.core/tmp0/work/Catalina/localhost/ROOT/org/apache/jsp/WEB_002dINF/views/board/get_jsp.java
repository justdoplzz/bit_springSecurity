/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-01-27 10:19:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class get_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/views/board/../includes/footer.jsp", Long.valueOf(1643278209533L));
    _jspx_dependants.put("jar:file:/E:/enter_workSpring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mySpring/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/board/../includes/header.jsp", Long.valueOf(1643278209534L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.2.10.RELEASE.jar", Long.valueOf(1642637576721L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1640322152836L));
    _jspx_dependants.put("jar:file:/E:/enter_workSpring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/mySpring/WEB-INF/lib/spring-security-taglibs-5.2.10.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1618212972000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<title>Get</title>\r\n");
      out.write("<style>\r\n");
      out.write(".uploadResult {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	background-color: gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".uploadResult ul {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-flow: row;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".uploadResult ul li {\r\n");
      out.write("	list-style: none;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	align-content: center;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".uploadResult ul li img {\r\n");
      out.write("	width: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".uploadResult ul li span {\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bigPictureWrapper {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	display: none;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	top: 0%;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	background-color: gray;\r\n");
      out.write("	z-index: 100;\r\n");
      out.write("	background: rgba(255, 255, 255, 0.5);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bigPicture {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bigPicture img {\r\n");
      out.write("	width: 600px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta name=\"author\" content=\"\">\r\n");
      out.write("\r\n");
      out.write("<title>SB Admin 2 - Bootstrap Admin Theme</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap Core CSS -->\r\n");
      out.write("<link href=\"/resources/vendor/bootstrap/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- MetisMenu CSS -->\r\n");
      out.write("<link href=\"/resources/vendor/metisMenu/metisMenu.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- DataTables CSS -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"/resources/vendor/datatables-plugins/dataTables.bootstrap.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- DataTables Responsive CSS -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"/resources/vendor/datatables-responsive/dataTables.responsive.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Custom CSS -->\r\n");
      out.write("<link href=\"/resources/dist/css/sb-admin-2.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Custom Fonts -->\r\n");
      out.write("<link href=\"/resources/vendor/font-awesome/css/font-awesome.min.css\"\r\n");
      out.write("	rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\r\n");
      out.write("<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\r\n");
      out.write("<!--[if lt IE 9]>\r\n");
      out.write("        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\r\n");
      out.write("        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\r\n");
      out.write("    <![endif]-->\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div id=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("		<!-- Navigation -->\r\n");
      out.write("		<nav class=\"navbar navbar-default navbar-static-top\" role=\"navigation\"\r\n");
      out.write("			style=\"margin-bottom: 0\">\r\n");
      out.write("			<div class=\"navbar-header\">\r\n");
      out.write("				<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\"\r\n");
      out.write("					data-target=\".navbar-collapse\">\r\n");
      out.write("					<span class=\"sr-only\">Toggle navigation</span> <span\r\n");
      out.write("						class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\r\n");
      out.write("						class=\"icon-bar\"></span>\r\n");
      out.write("				</button>\r\n");
      out.write("				<a class=\"navbar-brand\" href=\"index.html\">SB Admin v2.0</a>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- /.navbar-header -->\r\n");
      out.write("\r\n");
      out.write("			<ul class=\"nav navbar-top-links navbar-right\">\r\n");
      out.write("				<li class=\"dropdown\"><a class=\"dropdown-toggle\"\r\n");
      out.write("					data-toggle=\"dropdown\" href=\"#\"> <i\r\n");
      out.write("						class=\"fa fa-envelope fa-fw\"></i> <i class=\"fa fa-caret-down\"></i>\r\n");
      out.write("				</a>\r\n");
      out.write("					<ul class=\"dropdown-menu dropdown-messages\">\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<strong>John Smith</strong> <span class=\"pull-right text-muted\">\r\n");
      out.write("										<em>Yesterday</em>\r\n");
      out.write("									</span>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div>Lorem ipsum dolor sit amet, consectetur adipiscing\r\n");
      out.write("									elit. Pellentesque eleifend...</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<strong>John Smith</strong> <span class=\"pull-right text-muted\">\r\n");
      out.write("										<em>Yesterday</em>\r\n");
      out.write("									</span>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div>Lorem ipsum dolor sit amet, consectetur adipiscing\r\n");
      out.write("									elit. Pellentesque eleifend...</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<strong>John Smith</strong> <span class=\"pull-right text-muted\">\r\n");
      out.write("										<em>Yesterday</em>\r\n");
      out.write("									</span>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div>Lorem ipsum dolor sit amet, consectetur adipiscing\r\n");
      out.write("									elit. Pellentesque eleifend...</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a class=\"text-center\" href=\"#\"> <strong>Read\r\n");
      out.write("									All Messages</strong> <i class=\"fa fa-angle-right\"></i>\r\n");
      out.write("						</a></li>\r\n");
      out.write("					</ul> <!-- /.dropdown-messages --></li>\r\n");
      out.write("				<!-- /.dropdown -->\r\n");
      out.write("				<li class=\"dropdown\"><a class=\"dropdown-toggle\"\r\n");
      out.write("					data-toggle=\"dropdown\" href=\"#\"> <i class=\"fa fa-tasks fa-fw\"></i>\r\n");
      out.write("						<i class=\"fa fa-caret-down\"></i>\r\n");
      out.write("				</a>\r\n");
      out.write("					<ul class=\"dropdown-menu dropdown-tasks\">\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<p>\r\n");
      out.write("										<strong>Task 1</strong> <span class=\"pull-right text-muted\">40%\r\n");
      out.write("											Complete</span>\r\n");
      out.write("									</p>\r\n");
      out.write("									<div class=\"progress progress-striped active\">\r\n");
      out.write("										<div class=\"progress-bar progress-bar-success\"\r\n");
      out.write("											role=\"progressbar\" aria-valuenow=\"40\" aria-valuemin=\"0\"\r\n");
      out.write("											aria-valuemax=\"100\" style=\"width: 40%\">\r\n");
      out.write("											<span class=\"sr-only\">40% Complete (success)</span>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<p>\r\n");
      out.write("										<strong>Task 2</strong> <span class=\"pull-right text-muted\">20%\r\n");
      out.write("											Complete</span>\r\n");
      out.write("									</p>\r\n");
      out.write("									<div class=\"progress progress-striped active\">\r\n");
      out.write("										<div class=\"progress-bar progress-bar-info\" role=\"progressbar\"\r\n");
      out.write("											aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n");
      out.write("											style=\"width: 20%\">\r\n");
      out.write("											<span class=\"sr-only\">20% Complete</span>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<p>\r\n");
      out.write("										<strong>Task 3</strong> <span class=\"pull-right text-muted\">60%\r\n");
      out.write("											Complete</span>\r\n");
      out.write("									</p>\r\n");
      out.write("									<div class=\"progress progress-striped active\">\r\n");
      out.write("										<div class=\"progress-bar progress-bar-warning\"\r\n");
      out.write("											role=\"progressbar\" aria-valuenow=\"60\" aria-valuemin=\"0\"\r\n");
      out.write("											aria-valuemax=\"100\" style=\"width: 60%\">\r\n");
      out.write("											<span class=\"sr-only\">60% Complete (warning)</span>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<p>\r\n");
      out.write("										<strong>Task 4</strong> <span class=\"pull-right text-muted\">80%\r\n");
      out.write("											Complete</span>\r\n");
      out.write("									</p>\r\n");
      out.write("									<div class=\"progress progress-striped active\">\r\n");
      out.write("										<div class=\"progress-bar progress-bar-danger\"\r\n");
      out.write("											role=\"progressbar\" aria-valuenow=\"80\" aria-valuemin=\"0\"\r\n");
      out.write("											aria-valuemax=\"100\" style=\"width: 80%\">\r\n");
      out.write("											<span class=\"sr-only\">80% Complete (danger)</span>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a class=\"text-center\" href=\"#\"> <strong>See\r\n");
      out.write("									All Tasks</strong> <i class=\"fa fa-angle-right\"></i>\r\n");
      out.write("						</a></li>\r\n");
      out.write("					</ul> <!-- /.dropdown-tasks --></li>\r\n");
      out.write("				<!-- /.dropdown -->\r\n");
      out.write("				<li class=\"dropdown\"><a class=\"dropdown-toggle\"\r\n");
      out.write("					data-toggle=\"dropdown\" href=\"#\"> <i class=\"fa fa-bell fa-fw\"></i>\r\n");
      out.write("						<i class=\"fa fa-caret-down\"></i>\r\n");
      out.write("				</a>\r\n");
      out.write("					<ul class=\"dropdown-menu dropdown-alerts\">\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<i class=\"fa fa-comment fa-fw\"></i> New Comment <span\r\n");
      out.write("										class=\"pull-right text-muted small\">4 minutes ago</span>\r\n");
      out.write("								</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<i class=\"fa fa-twitter fa-fw\"></i> 3 New Followers <span\r\n");
      out.write("										class=\"pull-right text-muted small\">12 minutes ago</span>\r\n");
      out.write("								</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<i class=\"fa fa-envelope fa-fw\"></i> Message Sent <span\r\n");
      out.write("										class=\"pull-right text-muted small\">4 minutes ago</span>\r\n");
      out.write("								</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<i class=\"fa fa-tasks fa-fw\"></i> New Task <span\r\n");
      out.write("										class=\"pull-right text-muted small\">4 minutes ago</span>\r\n");
      out.write("								</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"#\">\r\n");
      out.write("								<div>\r\n");
      out.write("									<i class=\"fa fa-upload fa-fw\"></i> Server Rebooted <span\r\n");
      out.write("										class=\"pull-right text-muted small\">4 minutes ago</span>\r\n");
      out.write("								</div>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a class=\"text-center\" href=\"#\"> <strong>See\r\n");
      out.write("									All Alerts</strong> <i class=\"fa fa-angle-right\"></i>\r\n");
      out.write("						</a></li>\r\n");
      out.write("					</ul> <!-- /.dropdown-alerts --></li>\r\n");
      out.write("				<!-- /.dropdown -->\r\n");
      out.write("				<li class=\"dropdown\"><a class=\"dropdown-toggle\"\r\n");
      out.write("					data-toggle=\"dropdown\" href=\"#\"> <i class=\"fa fa-user fa-fw\"></i>\r\n");
      out.write("						<i class=\"fa fa-caret-down\"></i>\r\n");
      out.write("				</a>\r\n");
      out.write("					<ul class=\"dropdown-menu dropdown-user\">\r\n");
      out.write("						<li><a href=\"#\"><i class=\"fa fa-user fa-fw\"></i> User\r\n");
      out.write("								Profile</a></li>\r\n");
      out.write("						<li><a href=\"#\"><i class=\"fa fa-gear fa-fw\"></i> Settings</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						<li class=\"divider\"></li>\r\n");
      out.write("						<li><a href=\"login.html\"><i class=\"fa fa-sign-out fa-fw\"></i>\r\n");
      out.write("								Logout</a></li>\r\n");
      out.write("					</ul> <!-- /.dropdown-user --></li>\r\n");
      out.write("				<!-- /.dropdown -->\r\n");
      out.write("			</ul>\r\n");
      out.write("			<!-- /.navbar-top-links -->\r\n");
      out.write("\r\n");
      out.write("			<div class=\"navbar-default sidebar\" role=\"navigation\">\r\n");
      out.write("				<div class=\"sidebar-nav navbar-collapse\">\r\n");
      out.write("					<ul class=\"nav\" id=\"side-menu\">\r\n");
      out.write("						<li class=\"sidebar-search\">\r\n");
      out.write("							<div class=\"input-group custom-search-form\">\r\n");
      out.write("								<input type=\"text\" class=\"form-control\" placeholder=\"Search...\">\r\n");
      out.write("								<span class=\"input-group-btn\">\r\n");
      out.write("									<button class=\"btn btn-default\" type=\"button\">\r\n");
      out.write("										<i class=\"fa fa-search\"></i>\r\n");
      out.write("									</button>\r\n");
      out.write("								</span>\r\n");
      out.write("							</div> <!-- /input-group -->\r\n");
      out.write("						</li>\r\n");
      out.write("						<li><a href=\"index.html\"><i class=\"fa fa-dashboard fa-fw\"></i>\r\n");
      out.write("								Dashboard</a></li>\r\n");
      out.write("						<li><a href=\"#\"><i class=\"fa fa-bar-chart-o fa-fw\"></i>\r\n");
      out.write("								Charts<span class=\"fa arrow\"></span></a>\r\n");
      out.write("							<ul class=\"nav nav-second-level\">\r\n");
      out.write("								<li><a href=\"flot.html\">Flot Charts</a></li>\r\n");
      out.write("								<li><a href=\"morris.html\">Morris.js Charts</a></li>\r\n");
      out.write("							</ul> <!-- /.nav-second-level --></li>\r\n");
      out.write("						<li><a href=\"tables.html\"><i class=\"fa fa-table fa-fw\"></i>\r\n");
      out.write("								Tables</a></li>\r\n");
      out.write("						<li><a href=\"forms.html\"><i class=\"fa fa-edit fa-fw\"></i>\r\n");
      out.write("								Forms</a></li>\r\n");
      out.write("						<li><a href=\"#\"><i class=\"fa fa-wrench fa-fw\"></i> UI\r\n");
      out.write("								Elements<span class=\"fa arrow\"></span></a>\r\n");
      out.write("							<ul class=\"nav nav-second-level\">\r\n");
      out.write("								<li><a href=\"panels-wells.html\">Panels and Wells</a></li>\r\n");
      out.write("								<li><a href=\"buttons.html\">Buttons</a></li>\r\n");
      out.write("								<li><a href=\"notifications.html\">Notifications</a></li>\r\n");
      out.write("								<li><a href=\"typography.html\">Typography</a></li>\r\n");
      out.write("								<li><a href=\"icons.html\"> Icons</a></li>\r\n");
      out.write("								<li><a href=\"grid.html\">Grid</a></li>\r\n");
      out.write("							</ul> <!-- /.nav-second-level --></li>\r\n");
      out.write("						<li><a href=\"#\"><i class=\"fa fa-sitemap fa-fw\"></i>\r\n");
      out.write("								Multi-Level Dropdown<span class=\"fa arrow\"></span></a>\r\n");
      out.write("							<ul class=\"nav nav-second-level\">\r\n");
      out.write("								<li><a href=\"#\">Second Level Item</a></li>\r\n");
      out.write("								<li><a href=\"#\">Second Level Item</a></li>\r\n");
      out.write("								<li><a href=\"#\">Third Level <span class=\"fa arrow\"></span></a>\r\n");
      out.write("									<ul class=\"nav nav-third-level\">\r\n");
      out.write("										<li><a href=\"#\">Third Level Item</a></li>\r\n");
      out.write("										<li><a href=\"#\">Third Level Item</a></li>\r\n");
      out.write("										<li><a href=\"#\">Third Level Item</a></li>\r\n");
      out.write("										<li><a href=\"#\">Third Level Item</a></li>\r\n");
      out.write("									</ul> <!-- /.nav-third-level --></li>\r\n");
      out.write("							</ul> <!-- /.nav-second-level --></li>\r\n");
      out.write("						<li><a href=\"#\"><i class=\"fa fa-files-o fa-fw\"></i>\r\n");
      out.write("								Sample Pages<span class=\"fa arrow\"></span></a>\r\n");
      out.write("							<ul class=\"nav nav-second-level\">\r\n");
      out.write("								<li><a href=\"blank.html\">Blank Page</a></li>\r\n");
      out.write("								<li><a href=\"login.html\">Login Page</a></li>\r\n");
      out.write("							</ul> <!-- /.nav-second-level --></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- /.sidebar-collapse -->\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- /.navbar-static-side -->\r\n");
      out.write("		</nav>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.js\"></script>\r\n");
      out.write("<!-- 푸터에 있음 -->\r\n");
      out.write("<div id=\"page-wrapper\">\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("		<div class=\"col-lg-12\">\r\n");
      out.write("			<h1 class=\"page-header\">BOARD GET</h1>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- /.col-lg-12 -->\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- /.row -->\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("		<div class=\"col-lg-12\">\r\n");
      out.write("			<div class=\"panel panel-default\">\r\n");
      out.write("				<div class=\"panel-heading\">Board Get (게시글 조회)</div>\r\n");
      out.write("				<!-- /.panel-heading -->\r\n");
      out.write("				<div class=\"panel-body\">\r\n");
      out.write("\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label>Bno</label><input class=\"form-control\" name=\"bno\"\r\n");
      out.write("							value='");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("' readonly=\"readonly\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label>Title</label><input class=\"form-control\" name=\"title\"\r\n");
      out.write("							value='");
      if (_jspx_meth_c_005fout_005f1(_jspx_page_context))
        return;
      out.write("' readonly=\"readonly\">\r\n");
      out.write("						");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label>Content</label>\r\n");
      out.write("						<textarea class=\"form-control\" name=\"content\" rows=\"3\"\r\n");
      out.write("							readonly=\"readonly\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label>Writer</label><input class=\"form-control\" name=\"writer\"\r\n");
      out.write("							value='");
      if (_jspx_meth_c_005fout_005f2(_jspx_page_context))
        return;
      out.write("' readonly=\"readonly\">\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class='uploadResult'>\r\n");
      out.write("						<ul>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<!-- <button data-oper='modify' class=\"btn btn-outline btn-primary\">Modify</button>\r\n");
      out.write("                  <button data-oper='list' class=\"btn btn-outline btn-success\">List</button> -->\r\n");
      out.write("					<form id='operForm' action=\"/board/modify\" method=\"get\">\r\n");
      out.write("						<input type=\"hidden\" id=\"bno\" name=\"bno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("						<input type=\"hidden\" name=\"pageNum\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("						<input type=\"hidden\" name=\"amount\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.amount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("						<input type=\"hidden\" name=\"type\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> <input\r\n");
      out.write("							type=\"hidden\" name=\"keyword\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cri.keyword}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("						\r\n");
      out.write("						");
      if (_jspx_meth_sec_005fauthentication_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						");
      if (_jspx_meth_sec_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						<button data-oper=\"list\" class=\"btn btn-outline btn-info btn-sm\">List</button>\r\n");
      out.write("					</form>\r\n");
      out.write("					<!-- /.panel-body -->\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<!-- /.panel -->\r\n");
      out.write("			</div>\r\n");
      out.write("			<!--첨부파일 -->\r\n");
      out.write("			<div class='bigPictureWrapper'>\r\n");
      out.write("				<div class='bigPicture'></div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- /.col-lg-12 -->\r\n");
      out.write("		<div class=\"col-lg-12\">\r\n");
      out.write("			<div class=\"panel panel-default\">\r\n");
      out.write("				<div class=\"panel-heading\">\r\n");
      out.write("					<i class=\"fa fa-comments fa-fw\"></i>Reply\r\n");
      out.write("					");
      if (_jspx_meth_sec_005fauthorize_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- /.panel-heading -->\r\n");
      out.write("\r\n");
      out.write("				<div class=\"panel-body\">\r\n");
      out.write("					<ul class=\"chat\">\r\n");
      out.write("						<!-- start reply -->\r\n");
      out.write("						<li class=\"left clearfix\" data-rno='12'>\r\n");
      out.write("							<div>\r\n");
      out.write("								<div class=\"header\">\r\n");
      out.write("									<strong class=\"primary-font\">user00</strong> <small\r\n");
      out.write("										class=\"pull-right text-muted\">2021-05-18 13:13</small>\r\n");
      out.write("								</div>\r\n");
      out.write("								<p>Good job!</p>\r\n");
      out.write("							</div>\r\n");
      out.write("						</li>\r\n");
      out.write("						<!--  end reply -->\r\n");
      out.write("					</ul>\r\n");
      out.write("					<!--  ./end ul -->\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- /.row -->\r\n");
      out.write("				<div class=\"panel-footer\">\r\n");
      out.write("					<div></div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- Modal -->\r\n");
      out.write("				<div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("					aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("					<div class=\"modal-dialog\">\r\n");
      out.write("						<div class=\"modal-content\">\r\n");
      out.write("							<div class=\"modal-header\">\r\n");
      out.write("								<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("									aria-hidden=\"true\">&times;</button>\r\n");
      out.write("								<h4 class=\"modal-title\" id=\"myModalLabel\">REPLY MODAL</h4>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"modal-body\">\r\n");
      out.write("								<div class=\"form-group\">\r\n");
      out.write("									<label>Reply</label> <input class=\"form-control\" name=\"reply\"\r\n");
      out.write("										value=\"New Reply!!!\">\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-group\">\r\n");
      out.write("									<label>Replyer</label> <input class=\"form-control\"\r\n");
      out.write("										name=\"replyer\" value=\"replyer\">\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-group\">\r\n");
      out.write("									<label>Reply date</label> <input class=\"form-control\"\r\n");
      out.write("										name=\"replyDate\" value=\"\">\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"modal-footer\">\r\n");
      out.write("								<button type=\"button\" id=\"modalModBtn\" class=\"btn btn-warning\">Modify</button>\r\n");
      out.write("								<button type=\"button\" id=\"modalRemoveBtn\" class=\"btn btn-danger\">Remove</button>\r\n");
      out.write("								<button type=\"button\" id=\"modalRegisterBtn\"\r\n");
      out.write("									class=\"btn btn-primary\">Register</button>\r\n");
      out.write("								<button type=\"button\" id=\"modalCloseBtn\" class=\"btn btn-default\"\r\n");
      out.write("									data-dismiss=\"modal\">Close</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<!-- /.modal-content -->\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- /.modal-dialog -->\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- /.modal -->\r\n");
      out.write("				<!-- /#page-wrapper -->\r\n");
      out.write("\r\n");
      out.write("				<script type=\"text/javascript\" src=\"/resources/js/reply.js\"></script>\r\n");
      out.write("				<script type=\"text/javascript\">\r\n");
      out.write("            \r\n");
      out.write("$(document).ready(function() {//즉시 실행 함수\r\n");
      out.write("   var operForm = $(\"#operForm\");\r\n");
      out.write("   $('button[data-oper=\"modify\"]').on(\r\n");
      out.write("         \"click\",function(e) {\r\n");
      out.write("            operForm.attr(\"action\",\"/board/modify\").submit();\r\n");
      out.write("         });\r\n");
      out.write("   $('button[data-oper=\"list\"]').on(\r\n");
      out.write("         \"click\",function(e) {\r\n");
      out.write("            operForm.find(\"#bno\").remove();\r\n");
      out.write("            operForm.attr(\"action\",\"/board/list\");\r\n");
      out.write("            operForm.submit();\r\n");
      out.write("         });\r\n");
      out.write("\r\n");
      out.write("   console.log(\"댓글 replyService : \"+ replyService);\r\n");
      out.write("   var bnoValue = '");
      if (_jspx_meth_c_005fout_005f3(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("   //가장 먼저 해당 게시물의 댓글을 가져오는 부분(자동)\r\n");
      out.write("   \r\n");
      out.write("   $.getJSON(\"/board/getAttachList\", {bno:bnoValue}, function(arr) { // url, data, success\r\n");
      out.write("            console.log(arr);\r\n");
      out.write("            var str = \"\";\r\n");
      out.write("            $(arr).each(function(i, obj) {\r\n");
      out.write("               if(!obj.fileType) { // 이미지가 아닌 경우\r\n");
      out.write("                  \r\n");
      out.write("                  var fileCallPath = encodeURIComponent(obj.uploadPath + \"/\" + obj.uuid + \"_\" + obj.fileName);\r\n");
      out.write("                  str += \"<li data-path='\"+obj.uploadPath+\"' data-uuid='\"+obj.uuid+\"' data-filename='\"+obj.fileName+\"' data-type='\"+obj.image+\"'><div>\";\r\n");
      out.write("                  str += \"<img src='/resources/images/attach.png'>\";\r\n");
      out.write("                  str += \"</div></li>\";\r\n");
      out.write("               } else {\r\n");
      out.write("                  \r\n");
      out.write("                  // 썸네일 나오게 처리\r\n");
      out.write("                  var fileCallPath = encodeURIComponent(obj.uploadPath +  \"/s_\" + obj.uuid + \"_\" + obj.fileName);\r\n");
      out.write("                  var originPath = obj.uploadPath + \"/\" + obj.uuid + \"_\" + obj.fileName;\r\n");
      out.write("                  console.log(\"originPath1 : \" + originPath);\r\n");
      out.write("                  originPath = originPath.replace(new RegExp(/\\\\/g), \"/\"); // \\를 /로 통일\r\n");
      out.write("                  console.log(\"originPath2 : \" + originPath);\r\n");
      out.write("                  str += \"<li data-path='\"+obj.uploadPath+\"' data-uuid='\"+obj.uuid+\"' data-filename='\"+obj.fileName+\"' data-type='\"+obj.image+\"'><div>\";\r\n");
      out.write("                  str += \"<a href=\\\"javascript:showImage(\\'\" + originPath + \"\\')\\\"><img src='/display?fileName=\" + fileCallPath + \"'></a>\";\r\n");
      out.write("                  str += \"</div></li>\";\r\n");
      out.write("               }\r\n");
      out.write("            });\r\n");
      out.write("            $(\".uploadResult ul\").html(str);\r\n");
      out.write("         }); // getJSON\r\n");
      out.write("    $(\".uploadResult\").on(\"click\",\"li\", function(e){\r\n");
      out.write("         \r\n");
      out.write("          console.log(\"view image\");\r\n");
      out.write("          \r\n");
      out.write("          var liObj = $(this);\r\n");
      out.write("          \r\n");
      out.write("          var path = encodeURIComponent(liObj.data(\"path\")+\"/\" + liObj.data(\"uuid\")+\"_\" + liObj.data(\"filename\"));\r\n");
      out.write("          \r\n");
      out.write("          if(liObj.data(\"type\")){\r\n");
      out.write("            showImage(path.replace(new RegExp(/\\\\/g),\"/\"));\r\n");
      out.write("          }else {\r\n");
      out.write("            //download \r\n");
      out.write("            self.location =\"/download?fileName=\"+path\r\n");
      out.write("          }\r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("          //이미지 크게 보여주기\r\n");
      out.write("        function showImage(fileCallPath){\r\n");
      out.write("          //alert(fileCallPath);\r\n");
      out.write("          \r\n");
      out.write("          $(\".bigPictureWrapper\").css(\"display\",\"flex\").show();\r\n");
      out.write("          \r\n");
      out.write("          $(\".bigPicture\")\r\n");
      out.write("          .html(\"<img src='/display?fileName=\"+fileCallPath+\"' >\")\r\n");
      out.write("          .animate({width:'100%', height: '100%'}, 1000);\r\n");
      out.write("          \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        $(\".bigPictureWrapper\").on(\"click\", function(e){\r\n");
      out.write("          $(\".bigPicture\").animate({width:'0%', height: '0%'}, 1000);\r\n");
      out.write("          setTimeout(function(){\r\n");
      out.write("            $('.bigPictureWrapper').hide();\r\n");
      out.write("          }, 1000);\r\n");
      out.write("        });\r\n");
      out.write("   //댓글 등록 테스트(replyService)\r\n");
      out.write("   /*replyService.add(\r\n");
      out.write("         {reply: \"JS Test\", replyer:\"tester\", bno:bnoValue} //댓글 데이터\r\n");
      out.write("         ,function(result) {\r\n");
      out.write("            alert(\"RESULT : \" + result);\r\n");
      out.write("         }\r\n");
      out.write("   ); */\r\n");
      out.write("\r\n");
      out.write("   //게시글 조회할 때마다 댓글 추가 확인\r\n");
      out.write("   /*replyService.getList({bno:bnoValue, page:1}, function(list) {\r\n");
      out.write("      for(var i=0, len=list.length || 0; i<len; i++) {\r\n");
      out.write("         console.log(list[i]);\r\n");
      out.write("      }\r\n");
      out.write("   }); */\r\n");
      out.write("\r\n");
      out.write("   //댓글 삭제 테스트(replyService)\r\n");
      out.write("   /* replyService.remove(3, function(count) {\r\n");
      out.write("      console.log(count);\r\n");
      out.write("      if(count===\"success\") {\r\n");
      out.write("         alert(\"REMOVED\");\r\n");
      out.write("      }\r\n");
      out.write("   }, function(err) {\r\n");
      out.write("      alert('ERROR....');\r\n");
      out.write("   }); */\r\n");
      out.write("\r\n");
      out.write("   //댓글 수정 테스트(replyService)\r\n");
      out.write("   /*replyService.update({\r\n");
      out.write("      rno:11,\r\n");
      out.write("      bno: bnoValue,\r\n");
      out.write("      reply: \"js Modified Reply....\"\r\n");
      out.write("   }, function(result) {\r\n");
      out.write("      alert(\"수정 완료\");\r\n");
      out.write("   }); */\r\n");
      out.write("\r\n");
      out.write("   //특정 댓글 조회 테스트(replyService)\r\n");
      out.write("   /* replyService.get(11, function(data) {\r\n");
      out.write("    console.log(\"aaaaaa\");\r\n");
      out.write("   console.log(data);\r\n");
      out.write("   });\r\n");
      out.write("    */\r\n");
      out.write(" \r\n");
      out.write("    //댓글의 페이지 번호 처리\r\n");
      out.write("   var pageNum = 1;\r\n");
      out.write("   var replyPageFooter = $(\".panel-footer\");\r\n");
      out.write("   function showReplyPage(replyCnt) {\r\n");
      out.write("      var endNum = Math.ceil(pageNum / 5.0) * 10;\r\n");
      out.write("      var startNum = endNum - 9;\r\n");
      out.write("      \r\n");
      out.write("      var prev = startNum != 1;\r\n");
      out.write("      var next = false;\r\n");
      out.write("      \r\n");
      out.write("      if(endNum * 5 >= replyCnt) {\r\n");
      out.write("         endNum = Math.ceil(replyCnt/5.0);\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      if(endNum * 5 < replyCnt) {\r\n");
      out.write("         next = true;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      var str = \"<ul class='pagination pull-right'>\";\r\n");
      out.write("      if(prev) {\r\n");
      out.write("         str += \"<li class='page-item'><a class='page-link' href='\"+(startNum-1)+\"'>Previous</a></li>\";\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      for(var i=startNum ; i<=endNum; i++){\r\n");
      out.write("         var active = pageNum == i? \"active\":\"\";\r\n");
      out.write("         str+=\"<li class='page-item \"+active+\" '><a class='page-link' href='\"+i+\"'>\"+i+\"</a></li>\";\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      if(next) {\r\n");
      out.write("         str+= \"<li class='page-item'><a class='page-link' href='\"+(endNum+1) + \"'>Next</a></li>\";\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      str += \"</ul></div>\";\r\n");
      out.write("      console.log(str);\r\n");
      out.write("      \r\n");
      out.write("      replyPageFooter.html(str);\r\n");
      out.write("   }\r\n");
      out.write("   replyPageFooter.on(\"click\", \"li a\", function(e) {\r\n");
      out.write("      e.preventDefault();\r\n");
      out.write("      console.log(\"page click\");\r\n");
      out.write("      var targetPageNum = $(this).attr(\"href\");\r\n");
      out.write("      console.log(\"targetPageNum : \" + targetPageNum);\r\n");
      out.write("      pageNum = targetPageNum;\r\n");
      out.write("      showList(pageNum);\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   var replyUL = $(\".chat\");\r\n");
      out.write("   showList(1);\r\n");
      out.write("\r\n");
      out.write("   function showList(page){ //해당 게시글의 댓글을 가져온 후 <li>태그를 만들어서 화면에 출력\r\n");
      out.write("      console.log(\"show list \" + page);\r\n");
      out.write("      replyService.getList( { bno : bnoValue, page : page || 1}, function(replyCnt,list) {\r\n");
      out.write("         \r\n");
      out.write("         console.log(\"replyCnt : \" + replyCnt);\r\n");
      out.write("         console.log(\"list : \" + list);\r\n");
      out.write("         console.log(list);\r\n");
      out.write("         \r\n");
      out.write("         if(page == 0) {\r\n");
      out.write("            pageNum = Math.ceil(replyCnt/5.0); //한 페이지에 5개씩\r\n");
      out.write("            showList(pageNum);\r\n");
      out.write("            return;\r\n");
      out.write("         }\r\n");
      out.write("         var str = \"\";\r\n");
      out.write("         if (list == null || list.length == 0) {\r\n");
      out.write("            replyUL.html(\"\");\r\n");
      out.write("            return;\r\n");
      out.write("         }\r\n");
      out.write("         for (var i = 0, len = list.length || 0; i < len; i++) {\r\n");
      out.write("            str += \"<li class='left cleafix' data-rno='\"+list[i].rno+\"'>\";\r\n");
      out.write("            str += \"    <div><div class='header'><strong class='primary-font'>\" + list[i].replyer + \"</strong>\";\r\n");
      out.write("            str += \"        <small class='pull-right text-muted'>\" + replyService.displayTime(list[i].replyDate) + \"</small></div>\";\r\n");
      out.write("            str += \"            <p>\" + list[i].reply + \"</p></div></li>\";\r\n");
      out.write("         }\r\n");
      out.write("         replyUL.html(str);\r\n");
      out.write("         showReplyPage(replyCnt);\r\n");
      out.write("      \r\n");
      out.write("      });//function call\r\n");
      out.write("   }//showList\r\n");
      out.write("   var modal = $(\".modal\");\r\n");
      out.write("   var modalInputReply = modal.find(\"input[name='reply']\");\r\n");
      out.write("   var modalInputReplyer = modal.find(\"input[name='replyer']\");\r\n");
      out.write("   var modalInputReplyDate = modal.find(\"input[name='replyDate']\");\r\n");
      out.write("   \r\n");
      out.write("   var modalModBtn = $(\"#modalModBtn\");\r\n");
      out.write("   var modalRemoveBtn = $(\"#modalRemoveBtn\");\r\n");
      out.write("   var modalRegisterBtn = $(\"#modalRegisterBtn\");\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   var replyer = null;\r\n");
      out.write("   ");
      if (_jspx_meth_sec_005fauthorize_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("   var csrfHeaderName = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.headerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("   var csrfTokenValue = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("    \r\n");
      out.write("   \r\n");
      out.write("   $(\"#addReplyBtn\").on(\"click\", function(e) {\r\n");
      out.write("      modal.find(\"input\").val(\"\");\r\n");
      out.write("      modal.find(\"input[name='replyer']\").val(replyer);\r\n");
      out.write("      modalInputReplyDate.closest(\"div\").hide();\r\n");
      out.write("      modal.find(\"button[id!='modalCloseBtn']\").hide();\r\n");
      out.write("      \r\n");
      out.write("      modalRegisterBtn.show();\r\n");
      out.write("      $(\".modal\").modal(\"show\");\r\n");
      out.write("      showList(1);\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   // ajax spring security header\r\n");
      out.write("   $(document).ajaxSend(function(e, xhr, options) {\r\n");
      out.write("	   xhr.setRequestHeader(csrfHeaderName, csrfTokenValue);\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("   modalRegisterBtn.on(\"click\", function(e) {\r\n");
      out.write("      var reply ={\r\n");
      out.write("            reply: modalInputReply.val(),\r\n");
      out.write("            replyer: modalInputReplyer.val(),\r\n");
      out.write("            bno: bnoValue\r\n");
      out.write("      };\r\n");
      out.write("      replyService.add(reply, function (result){\r\n");
      out.write("         alert(result); //댓글 등록이 정상임을 팝업으로 알림\r\n");
      out.write("         modal.find(\"input\").val(\"\"); //댓글 등록이 정상적으로 이뤄지면, 내용을 지움\r\n");
      out.write("         modal.modal(\"hide\"); //모달창 닫음\r\n");
      out.write("         \r\n");
      out.write("         showList(0); //새로운 댓글을 추가하면 page값을 0으로 전송하고, 댓글의 전체 숫자를 파악한 후에 페이지 이동\r\n");
      out.write("         //showList(1);\r\n");
      out.write("      });\r\n");
      out.write("   });\r\n");
      out.write("    $(\".chat\").on(\"click\", \"li\", function(e){\r\n");
      out.write("         var rno= $(this).data(\"rno\");\r\n");
      out.write("         modalInputReplyDate.closest(\"div\").show();\r\n");
      out.write("         replyService.get(rno, function(reply){\r\n");
      out.write("            console.log(\"댓글6. reply.js에서 replyVO를 reply로 받아옴\")\r\n");
      out.write("             console.log(\"rno\"+reply.rno+\" 댓글 클릭 >> \" );\r\n");
      out.write("            modalInputReply.val(reply.reply);\r\n");
      out.write("            modalInputReplyer.val(reply.replyer);\r\n");
      out.write("            modalInputReplyDate.val(replyService.displayTime(reply.replyDate)).attr(\"readonly\", \"readonly\");\r\n");
      out.write("            modal.data(\"rno\", reply.rno);\r\n");
      out.write("            \r\n");
      out.write("            modal.find(\"button[id != 'modalCloseBtn']\").hide();\r\n");
      out.write("            modalModBtn.show();\r\n");
      out.write("            modalRemoveBtn.show();\r\n");
      out.write("            \r\n");
      out.write("            $(\".modal\").modal(\"show\");\r\n");
      out.write("            \r\n");
      out.write("         });\r\n");
      out.write("     }) ;// 'chat'을 이용해 이벤트를 걸고 실제 이벤트 대상은 <li>태그가 되도록\r\n");
      out.write("   // 댓글 수정\r\n");
      out.write("   modalModBtn.on(\"click\", function(e){\r\n");
      out.write("      var reply = {rno:modal.data(\"rno\"), reply: modalInputReply.val()};\r\n");
      out.write("      replyService.update(reply, function(result){\r\n");
      out.write("         alert(result);\r\n");
      out.write("         modal.modal(\"hide\");\r\n");
      out.write("         showList(pageNum);\r\n");
      out.write("      });\r\n");
      out.write("   });\r\n");
      out.write("      \r\n");
      out.write("   // 댓글 삭제\r\n");
      out.write("   modalRemoveBtn.on(\"click\", function(result){\r\n");
      out.write("      var rno = modal.data(\"rno\");\r\n");
      out.write("      replyService.remove(rno, function(result){\r\n");
      out.write("         alert(result);\r\n");
      out.write("         modal.modal(\"hide\");\r\n");
      out.write("         showList(pageNum);\r\n");
      out.write("      });\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- jQuery -->\r\n");
      out.write("    <script src=\"/resources/vendor/jquery/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap Core JavaScript -->\r\n");
      out.write("    <script src=\"/resources/vendor/bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Metis Menu Plugin JavaScript -->\r\n");
      out.write("    <script src=\"/resources/vendor/metisMenu/metisMenu.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- DataTables JavaScript -->\r\n");
      out.write("    <script src=\"/resources/vendor/datatables/js/jquery.dataTables.min.js\"></script>\r\n");
      out.write("    <script src=\"/resources/vendor/datatables-plugins/dataTables.bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"/resources/vendor/datatables-responsive/dataTables.responsive.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Custom Theme JavaScript -->\r\n");
      out.write("    <script src=\"/resources/dist/js/sb-admin-2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Page-Level Demo Scripts - Tables - Use for reference -->\r\n");
      out.write("    <script>\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("        $('#dataTables-example').DataTable({\r\n");
      out.write("            responsive: true\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /WEB-INF/views/board/get.jsp(80,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f1_reused = false;
    try {
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent(null);
      // /WEB-INF/views/board/get.jsp(84,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.title}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      _jspx_th_c_005fout_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f2_reused = false;
    try {
      _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f2.setParent(null);
      // /WEB-INF/views/board/get.jsp(94,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.writer}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
      if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      _jspx_th_c_005fout_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthentication_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f0.setParent(null);
      // /WEB-INF/views/board/get.jsp(116,6) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setProperty("principal");
      // /WEB-INF/views/board/get.jsp(116,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setVar("pinfo");
      int _jspx_eval_sec_005fauthentication_005f0 = _jspx_th_sec_005fauthentication_005f0.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fvar_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f0);
      _jspx_th_sec_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthentication_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f0.setParent(null);
      // /WEB-INF/views/board/get.jsp(117,6) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f0.setAccess("isAuthenticated()");
      int _jspx_eval_sec_005fauthorize_005f0 = _jspx_th_sec_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("							");
        if (_jspx_meth_c_005fif_005f0(_jspx_th_sec_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("						");
      }
      if (_jspx_th_sec_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f0);
      _jspx_th_sec_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f0);
      // /WEB-INF/views/board/get.jsp(118,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pinfo.username eq board.writer}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							<button data-oper=\"modify\" class=\"btn btn-outline btn-primary btn-sm\">Modify</button>\r\n");
          out.write("							");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f1_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f1.setParent(null);
      // /WEB-INF/views/board/get.jsp(140,5) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f1.setAccess("isAuthenticated()");
      int _jspx_eval_sec_005fauthorize_005f1 = _jspx_th_sec_005fauthorize_005f1.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("						<button id=\"addReplyBtn\" class=\"btn btn-primary btn-xs pull-right\">New Reply</button>\r\n");
        out.write("					");
      }
      if (_jspx_th_sec_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f1);
      _jspx_th_sec_005fauthorize_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f3_reused = false;
    try {
      _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f3.setParent(null);
      // /WEB-INF/views/board/get.jsp(223,19) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f3.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.bno}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
      if (_jspx_th_c_005fout_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
      _jspx_th_c_005fout_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f2 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f2_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f2.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f2.setParent(null);
      // /WEB-INF/views/board/get.jsp(417,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f2.setAccess("isAuthenticated()");
      int _jspx_eval_sec_005fauthorize_005f2 = _jspx_th_sec_005fauthorize_005f2.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("   replyer = '");
        if (_jspx_meth_sec_005fauthentication_005f1(_jspx_th_sec_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("';\r\n");
        out.write("   ");
      }
      if (_jspx_th_sec_005fauthorize_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f2);
      _jspx_th_sec_005fauthorize_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f2, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthentication_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f1 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f1_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f2);
      // /WEB-INF/views/board/get.jsp(418,14) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f1.setProperty("principal.username");
      int _jspx_eval_sec_005fauthentication_005f1 = _jspx_th_sec_005fauthentication_005f1.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f1);
      _jspx_th_sec_005fauthentication_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthentication_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthentication_005f1_reused);
    }
    return false;
  }
}
