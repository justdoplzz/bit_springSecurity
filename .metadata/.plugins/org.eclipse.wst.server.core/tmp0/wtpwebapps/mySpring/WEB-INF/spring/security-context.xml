<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customAccessDenied" class="org.conan.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="org.conan.security.CustomLoginSuccessHandler"></bean>
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customUserDetailsService" class="org.conan.security.CustomUserDetailsService"></bean>
	
	<security:http auto-config="true" use-expressions="true">
		<!-- 접근제한 설정 -->
		<security:intercept-url pattern="/sample/all" access="permitAll"/>
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		<security:form-login login-page="/customLogin"/> <!-- authentication-success-handler-ref="customLoginSuccess"/> -->
		<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me, JSESSION_ID"/>
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<!-- <security:user-service> -->
				<!-- 5.0부터는 패스워드 암호화 필수 -->
				<!-- <security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
			</security:user-service> -->
			
			<!-- customUserDetailService 사용을 위해 삭제 -->
			<!-- <security:jdbc-user-service data-source-ref="dataSource"/> -->
			
			<!-- 로그인  테스트 후 삭제 -->
			<!-- users-by-username-query="select userid, userpwd, enabled from tbl_member where userid = ?"
			authorities-by-username-query="select userid, auth from tbl_member_auth where userid = ?" -->
			
			<!-- bcrypt: 패스워드를 저장하는 용도로 설계된 해시 함수. 특정 문자열을 암호화, 체크하는 쪽에서는 암호화된 패스워드가 가능한 패스워드인지만 확인(단방향: 암호화한 패스워드를 비교. 복호화 X) -->
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
		
	</security:authentication-manager>
	
</beans>
